package cz.deznekcz.util;

import java.io.File;
import java.util.HashMap;

import cz.deznekcz.javafx.components.Dialog;
import cz.deznekcz.util.xml.XML;
import cz.deznekcz.util.xml.XMLLoader;
import cz.deznekcz.util.xml.XMLStepper;
import cz.deznekcz.util.xml.XMLStepper.Step;
import cz.deznekcz.util.xml.XMLStepper.StepDocument;
import cz.deznekcz.util.xml.XMLStepper.StepList;
import cz.deznekcz.util.xml.XMLPairTag;
import cz.deznekcz.util.xml.XMLRoot;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;

public class LiveStorage {

	private StringProperty id;
	private StepDocument xmlRoot;
	private File cfg;
	private HashMap<String, String> searched;
	private StepList valueList;
	
	public LiveStorage(File cfg) throws Exception {
		this.cfg = cfg;
		
		xmlRoot = XMLStepper.fromFile(cfg.getPath());
		id = new SimpleStringProperty(xmlRoot.getNode("storage/id").text());
		id.addListener((i) -> save());
		
		searched = new HashMap<>();
		
		valueList = xmlRoot.getList("storage/values/value");
		for (Step value : valueList.asList()) {
			searched.put(value.attribute("id"), value.text());
		}
	}

	public StringProperty idProperty() {
		return id;
	}

	public void save() {
		try {
			XML xml = XML.init("storage", XML.Type.UTF8, "Autogenerated by LiveStorage::save()");
			XMLPairTag<XMLRoot> values = xml.root() // continues at next line with definition
				.newPairTag("id", false)
					.setComment("Loads a configuration tab")
					.setText(id.get())
				.close()
				.newPairTag("values")
					.setComment("Last stored values");
			
			// Fill values
			for (String value : searched.keySet()) {
				values.newPairTag("value", false)
						.addAttribute("id", value)
						.setTextCDATA(searched.get(value))
					.close();
			}
			
			XMLLoader.save(cfg, xml.write());
		} catch (Exception e) {
			Dialog.EXCEPTION.show(e);
		}
	}
	
	public String getId() {
		return id.get();
	}
	
	public void setId(String id) {
		this.id.set(id);
	}

	public String getValue(String key) {
		return searched.get(key);
	}

	public void setValue(String key, String value) {
		if (!value.equals(searched.put(key, value))) {
			save(); 
		}
	}
}
